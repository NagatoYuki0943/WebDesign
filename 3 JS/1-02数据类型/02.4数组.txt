1 JS中只有索引数组


2 声明方式
    (1).字面量声明
        var arr1 = [1, 2, 3, 4];
    
    (2).构造函数声明
        var arr2 = new Array(); //声明空对象
        arr2[0] = 0;
        arr2[1] = 1;
        arr2[2] = 2;


3 多维数组
    var arr3 = [
        0, [1, 2, 3],
        4
    ];
    console.log(arr3);
    /**
     * 0: 0
     * 1: Array(3) [ 1, 2, 3 ]
     * 2: 4
     */
    console.log(arr3[1][0]); //1


4 遍历数组
    var arr4 = [8, 7, 6, 5, 4, 3, 2, 1];

    //forin循环
    for (const v in arr4) {
        //v是下标
        console.log(v);
        console.log(arr4[v]);
    }
    //8 7 6 5 4 3 2 1

    //forEach循环,有两种写法
    arr4.forEach(element => {   //遍历数组
        console.log(element);
    });
    //8 7 6 5 4 3 2 1

    arr4.forEach(function(v, k) { //v代表值,k代表下标
    console.log(k);
    });
    //0 1 2 3 4 5 6 7


5 常用数组和方法
    (1) length属性,获取个数
        console.log(arr4.length);   //8

        php中使用 count(数组名) 获取长度

    (2) unshift         push    压入,返回总长度
        shift           pop     取出,返回取出的值

    (3) concat()    连接两个或者更多的数组,并返回新数组,不会影响原有数组
        var arr3 = arr1.concat(arr2);

    (4) join()      把数组的所有元素放入一个字符串.元素通过指定的分隔符进行分割,不会影响原数组
        var arr2Str = arr3.join(":");   //使用 : 分隔

    (5) reverse()   颠倒数组中元素的顺序,会改变原数组
        arr3.reverse();

    (6) sort()      对数组元素进行排序,会改变原数组
        arr3.sort(); //默认升序
        arr3.sort(function(a, b) { //使用匿名函数,这样就降序排列了
            return b - a;
        });

    (7) splice()    删除元素,并向数组添加新元素
        splice(指定要删除的元素下标,要删除之后的几个元素,要插入的内容);
        arr2.splice(1, 2); //删除从下标1开始2个
        arr3.splice(1); //删除从下标1开始所有元素
        arr4.splice(0, 0, 5); //在第0个元素之前添加,第一个数是0,第二个删除数是0
        arr4.splice(2, 0, 6); //在第2个元素之前添加,第一个数是2,第二个删除数是0
        arr5.splice(1, 1, 5); //第1个元素换成5
        arr6.splice(0, 0, [9, 9]); //第一个位置替换成一个数组,不会拼接成一个数组