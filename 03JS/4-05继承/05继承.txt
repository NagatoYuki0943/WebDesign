1 在php中,我们可以使用 extends 关键字来实现类的继承;
  但是,js中并没有类似 extends 的关键字提供继承功能;
  而我们知道,所谓的继承,其实就是为子类提供父类中的方法和属性,使子类能够使用父类中的属性和方法


    (1) 修改构造函数的prototype属性实现继承
            Man.prototype = new Run();


    (2).通过原型实现继承;
        Object.setPrototypeOf(对象,原型对象)
        __proto__也可以

            var run1 = new Run();
            var man1 = new Man();
            Object.setPrototypeOf(man1, run1);


    (3).通过call或者apply方法继承

        // 没有new它,只是普通函数
        function Run() {
            this.func = function() {
                console.log('PPPP');
            }
        }

        function Man() {
            // 构造函数内部的this就是实例化的对象,调用call,将Run函数内部的this指向传入的this对象,
            // 就是将Run中this执向下面的m,相当于给m对象添加了p方法
            Run.call(this);
        }

        // 方式3 使用call和apply实现继承
        var man1 = new Man();
        man1.func(); // PPPP
        console.log(Object.getPrototypeOf(man1)); // Object { … }
